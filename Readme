## Opis Projektu

Jest to solucja składająca się z 5 projektów: aplikacji WPF (.NET Framework), własnej biblioteki (.NET Framework), testów (NUnit), usługi (Windows Service) oraz instalatora.

Z poziomu aplikacji możesz:

- Włączać lub wyłączać usługę obsługującą aplikację.
- Wybierać folder lub plik do "śledzenia", czyli ustawienia na niego watcher'a (wybiera się to poprzez modalne okno dialogowe, w którym można także stworzyć nowy plik lub folder).
- Włączać lub wyłączać watcher na pliki.

Śledzenie odbywa się dwuetapowo: na ekranie aplikacji wyświetlają się zmiany, ale także do usługi zostaje wysłane na odpowiedni endpoint zapytanie HTTP, które zawiera ścieżkę do śledzonego pliku/folderu. Usługa zaczyna wtedy raportować wszystkie zmiany do dziennika zdarzeń, do którego mamy podgląd z poziomu aplikacji. Wysłanie kolejnego specjalnego zapytania powoduje, że usługa przestaje śledzić wybrany wcześniej folderu, udało mi się to przy zastosowaniu wzorca projektowego singleton service.

Śledzenie folderu polega na raportowaniu dodania, usunięcia, zmiany nazwy oraz informacji o zmianie pliku.

Śledzenie pliku polega na raportowaniu dodanych (+) lub usuniętych (-) linijek. Można śledzić tylko pliki .txt, co jest możliwe dzięki wykorzystaniu zestawu DiffMatchPatch.

Biblioteka zawiera "logikę" watcherów, dzięki czemu jest używana zarówno w usłudze, jak i w aplikacji WPF.

Pliki konfiguracyjne są używane do przechowywania nazwy oraz źródła dziennika zdarzeń, endpointów oraz nazwy usługi.

Cały interfejs użytkownika jest też przygotowany w taki sposób, że odpowiednie przyciski blokują się, gdy użytkownik działa, dzięki czemu unikam nieprzewidzianych sytuacji i błędów.
